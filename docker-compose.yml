version: "3.8"
services:
  # --------------------------------------------------
  #  Node.js
  # --------------------------------------------------

  node:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    image: gameusers-node:latest
    container_name: gameusers-node
    ports:
      - "8080:8080"
    tty: true
    volumes:
      - .:/src
      #- /src/node_modules
    environment:
      - NODE_ENV=development
      - DB_URL_DOCKER=mongo1:27017,mongo2:27017,mongo3:27017

  # --------------------------------------------------
  #  Nginx
  # --------------------------------------------------

  nginx:
    image: nginx:latest
    container_name: gameusers-nginx
    depends_on:
      - node
    ports:
      - "80:80"
    volumes:
      - .:/src
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf

  # --------------------------------------------------
  #  MongoDB 認証なし
  # --------------------------------------------------

  mongo1:
    image: mongo:latest
    container_name: gameusers-mongo1
    restart: always
    depends_on:
      - mongo2
      - mongo3
    ports:
      - "27017:27017"
    volumes:
      # - ./db/server1/data:/data/db
      # - ./db/server1/log:/var/log/mongodb
      # MongoDB 初期化用 レプリカセットの設定＆ユーザー追加
      - ./docker/mongo:/src/docker/mongo:ro
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]
    # entrypoint: [ "/usr/bin/mongod", "--bind_ip", "localhost,mongo1", "--replSet", "rs0" ]

  mongo2:
    image: mongo:latest
    container_name: gameusers-mongo2
    restart: always
    depends_on:
      - mongo3
    ports:
      - "27018:27017"
    # volumes:
    #   - ./db/server2/data:/data/db
    #   - ./db/server2/log:/var/log/mongodb
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]
    # entrypoint: [ "/usr/bin/mongod", "--bind_ip", "localhost,mongo2", "--replSet", "rs0" ]

  mongo3:
    image: mongo:latest
    container_name: gameusers-mongo3
    restart: always
    ports:
      - "27019:27017"
    # volumes:
    #   - ./db/server3/data:/data/db
    #   - ./db/server3/log:/var/log/mongodb
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]
    # entrypoint: [ "/usr/bin/mongod", "--bind_ip", "localhost,mongo3", "--replSet", "rs0" ]

  # --------------------------------------------------
  #  MongoDB 認証あり / 認証を利用した場合 mongo-express が使えなくなる
  # --------------------------------------------------

  # mongo1:
  #   image: mongo:latest
  #   container_name: gameusers-mongo1
  #   restart: always
  #   # environment:
  #   #   - MONGO_INITDB_ROOT_USERNAME=root
  #   #   - MONGO_INITDB_ROOT_PASSWORD=password
  #     # MONGO_INITDB_ROOT_USERNAME: root
  #     # MONGO_INITDB_ROOT_PASSWORD: password
  #   #   MONGO_INITDB_DATABASE: admin
  #   depends_on:
  #     - mongo2
  #     - mongo3
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     # - ./db/server1/data:/data/db
  #     # - ./db/server1/log:/var/log/mongodb
  #     # MongoDB 初期化用 レプリカセットの設定＆ユーザー追加
  #     - ./docker/mongo:/src/docker/mongo:ro
  #     # 認証用 keyFile
  #     - ./db/mongod-keyfile:/src/db/mongod-keyfile:ro
  #   # entrypoint: [ "/usr/bin/mongod", "--bind_ip", "localhost,mongo1", "--replSet", "rs0", "--auth", "--keyFile", "/src/db/mongod-keyfile" ]
  #   entrypoint: [ "/usr/bin/mongod", "--auth", "--keyFile", "/src/db/mongod-keyfile", "--bind_ip_all", "--replSet", "rs0" ]

  # mongo2:
  #   image: mongo:latest
  #   container_name: gameusers-mongo2
  #   restart: always
  #   depends_on:
  #     - mongo3
  #   ports:
  #     - "27018:27017"
  #   volumes:
  #     # - ./db/server2/data:/data/db
  #     # - ./db/server2/log:/var/log/mongodb
  #     - ./db/mongod-keyfile:/src/db/mongod-keyfile:ro
  #   # entrypoint: [ "/usr/bin/mongod", "--bind_ip", "localhost,mongo1", "--replSet", "rs0", "--auth", "--keyFile", "/src/db/mongod-keyfile" ]
  #   entrypoint: [ "/usr/bin/mongod", "--auth", "--keyFile", "/src/db/mongod-keyfile", "--bind_ip_all", "--replSet", "rs0" ]

  # mongo3:
  #   image: mongo:latest
  #   container_name: gameusers-mongo3
  #   restart: always
  #   ports:
  #     - "27019:27017"
  #   volumes:
  #     # - ./db/server3/data:/data/db
  #     # - ./db/server3/log:/var/log/mongodb
  #     - ./db/mongod-keyfile:/src/db/mongod-keyfile:ro
  #   # entrypoint: [ "/usr/bin/mongod", "--bind_ip", "localhost,mongo1", "--replSet", "rs0", "--auth", "--keyFile", "/src/db/mongod-keyfile" ]
  #   entrypoint: [ "/usr/bin/mongod", "--auth", "--keyFile", "/src/db/mongod-keyfile", "--bind_ip_all", "--replSet", "rs0" ]

  # --------------------------------------------------
  #  mongo-express
  # --------------------------------------------------

  mongo-express:
    image: mongo-express:latest
    container_name: gameusers-mongo-express
    restart: always
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    ports:
      - "8081:8081"
    environment:
      # ME_CONFIG_MONGODB_SERVER: gameusers-mongo1
      # ME_CONFIG_MONGODB_SERVER: mongo1
      # ME_CONFIG_MONGODB_SERVER: 'mongo1'
      # ME_CONFIG_MONGODB_SERVER: gameusers-mongo1,gameusers-mongo2,gameusers-mongo3
      # ME_CONFIG_MONGODB_SERVER: 'gameusers-mongo1,gameusers-mongo2,gameusers-mongo3'
      # ME_CONFIG_MONGODB_SERVER: mongo1:27017,mongo2:27017,mongo3:27017
      # ME_CONFIG_MONGODB_SERVER: 'mongo1:27017,mongo2:27017,mongo3:27017'
      # - ME_CONFIG_MONGODB_SERVER=mongo1,mongo2,mongo3
      # - ME_CONFIG_MONGODB_SERVER='gameusers-mongo1,gameusers-mongo2,gameusers-mongo3'

      # - ME_CONFIG_MONGODB_SERVER=mongo1
      - ME_CONFIG_MONGODB_SERVER=mongo1,mongo2,mongo3
      - ME_CONFIG_MONGODB_PORT=27017
      # - ME_CONFIG_MONGODB_URL='mongodb://root:password@mongo1:27017,mongo2:27017,mongo3:27017/db?replicaSet=rs0'

      # - ME_CONFIG_MONGODB_ENABLE_ADMIN='true'
      # - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      # - ME_CONFIG_MONGODB_ADMINPASSWORD=password

      # - ME_CONFIG_MONGODB_ENABLE_ADMIN='false'
      # - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      # - ME_CONFIG_MONGODB_AUTH_USERNAME=root
      # - ME_CONFIG_MONGODB_AUTH_PASSWORD=password

      # ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      # ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASS}
